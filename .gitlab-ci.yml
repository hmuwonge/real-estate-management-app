# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/user/application_security/secret_detection/pipeline/configure
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
  - build
  - test
  - dockerize
  - deploy

variables:
  PROJECT_NAME: sawatech
  BACKEND_PATH: aspnet-core
  FRONTEND_PATH: angular

# Build .NET Backend
build_backend:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:7.0
  script:
    - cd $BACKEND_PATH/src/SawaTech.PropertyMini.HttpApi.Host
    - dotnet restore
    - dotnet build --configuration Release
  artifacts:
    paths:
      - $BACKEND_PATH/src/SawaTech.PropertyMini.HttpApi.Host/bin/

# Build Angular Frontend
build_frontend:
  stage: build
  image: node:20
  script:
    - cd $FRONTEND_PATH
    - npm ci
    - npm run build -- --configuration production
  artifacts:
    paths:
      - $FRONTEND_PATH/dist/

# Run Tests
test_backend:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:7.0
  script:
    - cd $BACKEND_PATH/test
    - dotnet test

# Dockerize app
dockerize:
  stage: dockerize
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $PROJECT_NAME-backend $BACKEND_PATH/src/SawaTech.PropertyMini.HttpApi.Host
    - docker build -t $PROJECT_NAME-frontend $FRONTEND_PATH
    - docker-compose up -d

# Local Deploy (dev machine with SSH access)
deploy_local:
  stage: deploy
  image: alpine:latest
  only:
    - main
  before_script:
    - apk add --no-cache openssh
  script:
    - echo "$SSH_PRIVATE_KEY" > id_rsa && chmod 600 id_rsa
    - scp -i id_rsa docker-compose.yml user@local-dev-machine:/path/to/deploy
    - ssh -i id_rsa user@local-dev-machine "cd /path/to/deploy && docker-compose pull && docker-compose up -d"
