ú±
ÇD:\PROJECTS\.NET\ABP Framework\SawaTech assign\aspnet-core\src\SawaTech.PropertyMini.HttpApi.Host\PropertyMiniHttpApiHostModule.cs
	namespace)) 	
SawaTech))
 
.)) 
PropertyMini)) 
;))  
[++ 
	DependsOn++ 

(++
 
typeof,, 

(,,
 %
PropertyMiniHttpApiModule,, $
),,$ %
,,,% &
typeof-- 

(--
 
AbpAutofacModule-- 
)-- 
,-- 
typeof// 

(//
 )
PropertyMiniApplicationModule// (
)//( )
,//) *
typeof00 

(00
 1
%PropertyMiniEntityFrameworkCoreModule00 0
)000 1
,001 2
typeof22 

(22
 )
AbpAccountWebOpenIddictModule22 (
)22( )
,22) *
typeof33 

(33
 &
AbpAspNetCoreSerilogModule33 %
)33% &
,33& '
typeof44 

(44
  
AbpSwashbuckleModule44 
)44  
,44  !
typeof55 

(55
 6
*AbpAspNetCoreAuthenticationJwtBearerModule55 5
)555 6
,556 7
typeof88 

(88
  
AbpBlobStoringModule88 
)88  
,88  !
typeof99 

(99
 *
AbpBlobStoringFileSystemModule99 )
)99) *
):: 
]:: 
public;; 
class;; )
PropertyMiniHttpApiHostModule;; *
:;;+ ,
	AbpModule;;- 6
{<< 
public== 

override== 
void==  
PreConfigureServices== -
(==- .'
ServiceConfigurationContext==. I
context==J Q
)==Q R
{>> 
}HH 
publicJJ 

overrideJJ 
voidJJ 
ConfigureServicesJJ *
(JJ* +'
ServiceConfigurationContextJJ+ F
contextJJG N
)JJN O
{KK 
varLL 
configurationLL 
=LL 
contextLL #
.LL# $
ServicesLL$ ,
.LL, -
GetConfigurationLL- =
(LL= >
)LL> ?
;LL? @
varMM 
hostingEnvironmentMM 
=MM  
contextMM! (
.MM( )
ServicesMM) 1
.MM1 2!
GetHostingEnvironmentMM2 G
(MMG H
)MMH I
;MMI J#
ConfigureAuthenticationOO 
(OO  
contextOO  '
)OO' (
;OO( )
ConfigureUrlsPP 
(PP 
configurationPP #
)PP# $
;PP$ %,
 ConfigureConventionalControllersQQ (
(QQ( )
)QQ) *
;QQ* +&
ConfigureVirtualFileSystemRR "
(RR" #
contextRR# *
)RR* +
;RR+ ,
ConfigureCorsSS 
(SS 
contextSS 
,SS 
configurationSS ,
)SS, -
;SS- .$
ConfigureSwaggerServicesTT  
(TT  !
contextTT! (
,TT( )
configurationTT* 7
)TT7 8
;TT8 9
	ConfigureVV 
<VV !
AbpBlobStoringOptionsVV '
>VV' (
(VV( )
optionsVV) 0
=>VV1 3
{WW 	
optionsXX 
.XX 

ContainersXX 
.XX 
	ConfigureXX (
<XX( )$
PropertyGalleryContainerXX) A
>XXA B
(XXB C
	containerXXC L
=>XXM O
{YY 
	containerZZ 
.ZZ 
UseFileSystemZZ '
(ZZ' (

fileSystemZZ( 2
=>ZZ3 5
{[[ 

fileSystem\\ 
.\\ 
BasePath\\ '
=\\( )
$str\\* F
;\\F G
}]] 
)]] 
;]] 
}^^ 
)^^ 
;^^ 
}__ 	
)__	 

;__
 
ConfigureApiVersionbb 
(bb 
contextbb "
)bb" #
;bb# $
	Configureoo 
<oo 
FormOptionsoo 
>oo 
(oo 
optionsoo &
=>oo' )
{pp 	
optionsqq 
.qq $
MultipartBodyLengthLimitqq ,
=qq- .
$numqq/ 8
;qq8 9
}rr 	
)rr	 

;rr
 
}ss 
privateuu 
voiduu 
ConfigureApiVersionuu $
(uu$ %'
ServiceConfigurationContextuu% @
contextuuA H
)uuH I
{vv 
contextww 
.ww 
Servicesww 
.ww 
AddAbpApiVersioningww ,
(ww, -
optionsww- 4
=>ww5 7
{xx 	
optionsyy 
.yy 
DefaultApiVersionyy %
=yy& '
newyy( +

ApiVersionyy, 6
(yy6 7
$numyy7 :
)yy: ;
;yy; <
optionszz 
.zz /
#AssumeDefaultVersionWhenUnspecifiedzz 7
=zz8 9
truezz: >
;zz> ?
options{{ 
.{{ 
ReportApiVersions{{ %
={{& '
true{{( ,
;{{, -
options|| 
.|| 
ApiVersionReader|| $
=||% &
new||' *&
UrlSegmentApiVersionReader||+ E
(||E F
)||F G
;||G H
}}} 	
)}}	 

;}}
 
}~~ 
private
ÄÄ 
void
ÄÄ %
ConfigureAuthentication
ÄÄ (
(
ÄÄ( ))
ServiceConfigurationContext
ÄÄ) D
context
ÄÄE L
)
ÄÄL M
{
ÅÅ 
context
ÉÉ 
.
ÉÉ 
Services
ÉÉ 
.
ÉÉ 
	Configure
ÉÉ "
<
ÉÉ" #.
 AbpClaimsPrincipalFactoryOptions
ÉÉ# C
>
ÉÉC D
(
ÉÉD E
options
ÉÉE L
=>
ÉÉM O
{
ÑÑ 	
options
ÖÖ 
.
ÖÖ $
IsDynamicClaimsEnabled
ÖÖ *
=
ÖÖ+ ,
true
ÖÖ- 1
;
ÖÖ1 2
}
ÜÜ 	
)
ÜÜ	 

;
ÜÜ
 
var
áá 
configuration
áá 
=
áá 
context
áá #
.
áá# $
Services
áá$ ,
.
áá, -
GetConfiguration
áá- =
(
áá= >
)
áá> ?
;
áá? @
context
ää 
.
ää 
Services
ää 
.
ää 
	Configure
ää "
<
ää" #

JwtSection
ää# -
>
ää- .
(
ää. /
configuration
ää/ <
.
ää< =

GetSection
ää= G
(
ääG H
$str
ääH T
)
ääT U
)
ääU V
;
ääV W
var
ãã 

jwtSection
ãã 
=
ãã 
configuration
ãã &
.
ãã& '

GetSection
ãã' 1
(
ãã1 2
nameof
ãã2 8
(
ãã8 9

JwtSection
ãã9 C
)
ããC D
)
ããD E
.
ããE F
Get
ããF I
<
ããI J

JwtSection
ããJ T
>
ããT U
(
ããU V
)
ããV W
;
ããW X
context
éé 
.
éé 
Services
éé 
.
éé 
AddAuthentication
éé *
(
éé* +
options
éé+ 2
=>
éé3 5
{
èè 	
options
êê 
.
êê '
DefaultAuthenticateScheme
êê -
=
êê. /
JwtBearerDefaults
êê0 A
.
êêA B"
AuthenticationScheme
êêB V
;
êêV W
options
ëë 
.
ëë $
DefaultChallengeScheme
ëë *
=
ëë+ ,
JwtBearerDefaults
ëë- >
.
ëë> ?"
AuthenticationScheme
ëë? S
;
ëëS T
}
íí 	
)
íí	 

.
íí
 
AddJwtBearer
íí 
(
íí 
options
íí 
=>
íí  "
{
ìì 	
options
îî 
.
îî '
TokenValidationParameters
îî -
=
îî. /
new
îî0 3
	Microsoft
îî4 =
.
îî= >
IdentityModel
îî> K
.
îîK L
Tokens
îîL R
.
îîR S'
TokenValidationParameters
îîS l
{
ïï 
ValidateIssuer
ññ 
=
ññ  
true
ññ! %
,
ññ% &
ValidIssuer
óó 
=
óó 
configuration
óó +
[
óó+ ,
$str
óó, B
]
óóB C
,
óóC D
ValidateAudience
òò  
=
òò! "
true
òò# '
,
òò' (
ValidAudience
ôô 
=
ôô 
configuration
ôô  -
[
ôô- .
$str
ôô. C
]
ôôC D
,
ôôD E
ValidateLifetime
öö  
=
öö! "
true
öö# '
,
öö' (&
ValidateIssuerSigningKey
õõ (
=
õõ) *
true
õõ+ /
,
õõ/ 0
IssuerSigningKey
úú !
=
úú" #
new
úú$ '"
SymmetricSecurityKey
úú( <
(
úú< =
Encoding
úú= E
.
úúE F
UTF8
úúF J
.
úúJ K
GetBytes
úúK S
(
úúS T

jwtSection
úúT ^
.
úú^ _
Key
úú_ b
!
úúb c
)
úúc d
)
úúd e
}
ûû 
;
ûû 
}
üü 	
)
üü	 

;
üü
 
}
†† 
private
§§ 
void
§§ 
ConfigureUrls
§§ 
(
§§ 
IConfiguration
§§ -
configuration
§§. ;
)
§§; <
{
•• 
	Configure
¶¶ 
<
¶¶ 
AppUrlOptions
¶¶ 
>
¶¶  
(
¶¶  !
options
¶¶! (
=>
¶¶) +
{
ßß 	
options
®® 
.
®® 
Applications
®®  
[
®®  !
$str
®®! &
]
®®& '
.
®®' (
RootUrl
®®( /
=
®®0 1
configuration
®®2 ?
[
®®? @
$str
®®@ M
]
®®M N
;
®®N O
options
©© 
.
©© !
RedirectAllowedUrls
©© '
.
©©' (
AddRange
©©( 0
(
©©0 1
configuration
©©1 >
[
©©> ?
$str
©©? X
]
©©X Y
?
©©Y Z
.
©©Z [
Split
©©[ `
(
©©` a
$char
©©a d
)
©©d e
??
©©f h
Array
©©i n
.
©©n o
Empty
©©o t
<
©©t u
string
©©u {
>
©©{ |
(
©©| }
)
©©} ~
)
©©~ 
;©© Ä
options
´´ 
.
´´ 
Applications
´´  
[
´´  !
$str
´´! *
]
´´* +
.
´´+ ,
RootUrl
´´, 3
=
´´4 5
configuration
´´6 C
[
´´C D
$str
´´D S
]
´´S T
;
´´T U
options
¨¨ 
.
¨¨ 
Applications
¨¨  
[
¨¨  !
$str
¨¨! *
]
¨¨* +
.
¨¨+ ,
Urls
¨¨, 0
[
¨¨0 1
AccountUrlNames
¨¨1 @
.
¨¨@ A
PasswordReset
¨¨A N
]
¨¨N O
=
¨¨P Q
$str
¨¨R j
;
¨¨j k
}
≠≠ 	
)
≠≠	 

;
≠≠
 
}
ÆÆ 
private
∞∞ 
void
∞∞ (
ConfigureVirtualFileSystem
∞∞ +
(
∞∞+ ,)
ServiceConfigurationContext
∞∞, G
context
∞∞H O
)
∞∞O P
{
±± 
var
≤≤  
hostingEnvironment
≤≤ 
=
≤≤  
context
≤≤! (
.
≤≤( )
Services
≤≤) 1
.
≤≤1 2#
GetHostingEnvironment
≤≤2 G
(
≤≤G H
)
≤≤H I
;
≤≤I J
if
¥¥ 

(
¥¥  
hostingEnvironment
¥¥ 
.
¥¥ 
IsDevelopment
¥¥ ,
(
¥¥, -
)
¥¥- .
)
¥¥. /
{
µµ 	
	Configure
∂∂ 
<
∂∂ )
AbpVirtualFileSystemOptions
∂∂ 1
>
∂∂1 2
(
∂∂2 3
options
∂∂3 :
=>
∂∂; =
{
∑∑ 
options
∏∏ 
.
∏∏ 
FileSets
∏∏  
.
∏∏  !'
ReplaceEmbeddedByPhysical
∏∏! :
<
∏∏: ;,
PropertyMiniDomainSharedModule
∏∏; Y
>
∏∏Y Z
(
∏∏Z [
Path
ππ 
.
ππ 
Combine
ππ  
(
ππ  ! 
hostingEnvironment
ππ! 3
.
ππ3 4
ContentRootPath
ππ4 C
,
ππC D
$"
∫∫ 
$str
∫∫ 
{
∫∫ 
Path
∫∫ !
.
∫∫! "$
DirectorySeparatorChar
∫∫" 8
}
∫∫8 9
$str
∫∫9 \
"
∫∫\ ]
)
∫∫] ^
)
∫∫^ _
;
∫∫_ `
options
ªª 
.
ªª 
FileSets
ªª  
.
ªª  !'
ReplaceEmbeddedByPhysical
ªª! :
<
ªª: ;&
PropertyMiniDomainModule
ªª; S
>
ªªS T
(
ªªT U
Path
ºº 
.
ºº 
Combine
ºº  
(
ºº  ! 
hostingEnvironment
ºº! 3
.
ºº3 4
ContentRootPath
ºº4 C
,
ººC D
$"
ΩΩ 
$str
ΩΩ 
{
ΩΩ 
Path
ΩΩ !
.
ΩΩ! "$
DirectorySeparatorChar
ΩΩ" 8
}
ΩΩ8 9
$str
ΩΩ9 U
"
ΩΩU V
)
ΩΩV W
)
ΩΩW X
;
ΩΩX Y
options
ææ 
.
ææ 
FileSets
ææ  
.
ææ  !'
ReplaceEmbeddedByPhysical
ææ! :
<
ææ: ;4
&PropertyMiniApplicationContractsModule
ææ; a
>
ææa b
(
ææb c
Path
øø 
.
øø 
Combine
øø  
(
øø  ! 
hostingEnvironment
øø! 3
.
øø3 4
ContentRootPath
øø4 C
,
øøC D
$"
¿¿ 
$str
¿¿ 
{
¿¿ 
Path
¿¿ !
.
¿¿! "$
DirectorySeparatorChar
¿¿" 8
}
¿¿8 9
$str
¿¿9 d
"
¿¿d e
)
¿¿e f
)
¿¿f g
;
¿¿g h
options
¡¡ 
.
¡¡ 
FileSets
¡¡  
.
¡¡  !'
ReplaceEmbeddedByPhysical
¡¡! :
<
¡¡: ;+
PropertyMiniApplicationModule
¡¡; X
>
¡¡X Y
(
¡¡Y Z
Path
¬¬ 
.
¬¬ 
Combine
¬¬  
(
¬¬  ! 
hostingEnvironment
¬¬! 3
.
¬¬3 4
ContentRootPath
¬¬4 C
,
¬¬C D
$"
√√ 
$str
√√ 
{
√√ 
Path
√√ !
.
√√! "$
DirectorySeparatorChar
√√" 8
}
√√8 9
$str
√√9 Z
"
√√Z [
)
√√[ \
)
√√\ ]
;
√√] ^
}
ƒƒ 
)
ƒƒ 
;
ƒƒ 
}
≈≈ 	
}
∆∆ 
private
»» 
void
»» .
 ConfigureConventionalControllers
»» 1
(
»»1 2
)
»»2 3
{
…… 
	Configure
   
<
   %
AbpAspNetCoreMvcOptions
   )
>
  ) *
(
  * +
options
  + 2
=>
  3 5
{
ÀÀ 	
options
ÃÃ 
.
ÃÃ %
ConventionalControllers
ÃÃ +
.
ÃÃ+ ,
Create
ÃÃ, 2
(
ÃÃ2 3
typeof
ÃÃ3 9
(
ÃÃ9 :+
PropertyMiniApplicationModule
ÃÃ: W
)
ÃÃW X
.
ÃÃX Y
Assembly
ÃÃY a
)
ÃÃa b
;
ÃÃb c
}
ÕÕ 	
)
ÕÕ	 

;
ÕÕ
 
}
ŒŒ 
private
–– 
static
–– 
void
–– &
ConfigureSwaggerServices
–– 0
(
––0 1)
ServiceConfigurationContext
––1 L
context
––M T
,
––T U
IConfiguration
––V d
configuration
––e r
)
––r s
{
—— 
context
““ 
.
““ 
Services
““ 
.
““ '
AddAbpSwaggerGenWithOAuth
““ 2
(
““2 3
configuration
”” 
[
”” 
$str
”” 0
]
””0 1
!
””1 2
,
””2 3
new
‘‘ 

Dictionary
‘‘ 
<
‘‘ 
string
‘‘ !
,
‘‘! "
string
‘‘# )
>
‘‘) *
{
’’ 
{
÷÷ 
$str
÷÷ #
,
÷÷# $
$str
÷÷% 7
}
÷÷7 8
}
◊◊ 
,
◊◊ 
options
ÿÿ 
=>
ÿÿ 
{
ŸŸ 
options
⁄⁄ 
.
⁄⁄ 

SwaggerDoc
⁄⁄ "
(
⁄⁄" #
$str
⁄⁄# '
,
⁄⁄' (
new
⁄⁄) ,
OpenApiInfo
⁄⁄- 8
{
⁄⁄9 :
Title
⁄⁄; @
=
⁄⁄A B
$str
⁄⁄C U
,
⁄⁄U V
Version
⁄⁄W ^
=
⁄⁄_ `
$str
⁄⁄a e
}
⁄⁄f g
)
⁄⁄g h
;
⁄⁄h i
options
€€ 
.
€€ #
DocInclusionPredicate
€€ -
(
€€- .
(
€€. /
docName
€€/ 6
,
€€6 7
description
€€8 C
)
€€C D
=>
€€E G
true
€€H L
)
€€L M
;
€€M N
options
‹‹ 
.
‹‹ 
CustomSchemaIds
‹‹ '
(
‹‹' (
type
‹‹( ,
=>
‹‹- /
type
‹‹0 4
.
‹‹4 5
FullName
‹‹5 =
)
‹‹= >
;
‹‹> ?
}
›› 
)
›› 
;
›› 
}
ﬁﬁ 
private
‡‡ 
static
‡‡ 
void
‡‡ 
ConfigureCors
‡‡ %
(
‡‡% &)
ServiceConfigurationContext
‡‡& A
context
‡‡B I
,
‡‡I J
IConfiguration
‡‡K Y
configuration
‡‡Z g
)
‡‡g h
{
·· 
context
‚‚ 
.
‚‚ 
Services
‚‚ 
.
‚‚ 
AddCors
‚‚  
(
‚‚  !
options
‚‚! (
=>
‚‚) +
{
„„ 	
options
‰‰ 
.
‰‰ 
AddDefaultPolicy
‰‰ $
(
‰‰$ %
builder
‰‰% ,
=>
‰‰- /
{
ÂÂ 
builder
ÊÊ 
.
ÁÁ 
WithOrigins
ÁÁ  
(
ÁÁ  !
configuration
ÁÁ! .
[
ÁÁ. /
$str
ÁÁ/ @
]
ÁÁ@ A
?
ÁÁA B
.
ËË 
Split
ËË 
(
ËË 
$str
ËË "
,
ËË" # 
StringSplitOptions
ËË$ 6
.
ËË6 7 
RemoveEmptyEntries
ËË7 I
)
ËËI J
.
ÈÈ 
Select
ÈÈ 
(
ÈÈ  
o
ÈÈ  !
=>
ÈÈ" $
o
ÈÈ% &
.
ÈÈ& '
RemovePostFix
ÈÈ' 4
(
ÈÈ4 5
$str
ÈÈ5 8
)
ÈÈ8 9
)
ÈÈ9 :
.
ÍÍ 
ToArray
ÍÍ  
(
ÍÍ  !
)
ÍÍ! "
??
ÍÍ# %
Array
ÍÍ& +
.
ÍÍ+ ,
Empty
ÍÍ, 1
<
ÍÍ1 2
string
ÍÍ2 8
>
ÍÍ8 9
(
ÍÍ9 :
)
ÍÍ: ;
)
ÍÍ; <
.
ÎÎ #
WithAbpExposedHeaders
ÎÎ *
(
ÎÎ* +
)
ÎÎ+ ,
.
ÏÏ 9
+SetIsOriginAllowedToAllowWildcardSubdomains
ÏÏ @
(
ÏÏ@ A
)
ÏÏA B
.
ÌÌ 
AllowAnyHeader
ÌÌ #
(
ÌÌ# $
)
ÌÌ$ %
.
ÓÓ 
AllowAnyMethod
ÓÓ #
(
ÓÓ# $
)
ÓÓ$ %
.
ÔÔ 
AllowCredentials
ÔÔ %
(
ÔÔ% &
)
ÔÔ& '
;
ÔÔ' (
}
 
)
 
;
 
}
ÒÒ 	
)
ÒÒ	 

;
ÒÒ
 
}
ÚÚ 
public
ÙÙ 

override
ÙÙ 
void
ÙÙ )
OnApplicationInitialization
ÙÙ 4
(
ÙÙ4 5.
 ApplicationInitializationContext
ÙÙ5 U
context
ÙÙV ]
)
ÙÙ] ^
{
ıı 
var
ˆˆ 
app
ˆˆ 
=
ˆˆ 
context
ˆˆ 
.
ˆˆ #
GetApplicationBuilder
ˆˆ /
(
ˆˆ/ 0
)
ˆˆ0 1
;
ˆˆ1 2
var
˜˜ 
env
˜˜ 
=
˜˜ 
context
˜˜ 
.
˜˜ 
GetEnvironment
˜˜ (
(
˜˜( )
)
˜˜) *
;
˜˜* +
if
˘˘ 

(
˘˘ 
env
˘˘ 
.
˘˘ 
IsDevelopment
˘˘ 
(
˘˘ 
)
˘˘ 
)
˘˘  
{
˙˙ 	
app
˚˚ 
.
˚˚ '
UseDeveloperExceptionPage
˚˚ )
(
˚˚) *
)
˚˚* +
;
˚˚+ ,
}
¸¸ 	
app
˛˛ 
.
˛˛ '
UseAbpRequestLocalization
˛˛ %
(
˛˛% &
)
˛˛& '
;
˛˛' (
if
ÄÄ 

(
ÄÄ 
!
ÄÄ 
env
ÄÄ 
.
ÄÄ 
IsDevelopment
ÄÄ 
(
ÄÄ 
)
ÄÄ  
)
ÄÄ  !
{
ÅÅ 	
app
ÇÇ 
.
ÇÇ 
UseErrorPage
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
app
ÖÖ 
.
ÖÖ 
UseCorrelationId
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
app
ÜÜ 
.
ÜÜ  
MapAbpStaticAssets
ÜÜ 
(
ÜÜ 
)
ÜÜ  
;
ÜÜ  !
app
áá 
.
áá 
UseStaticFiles
áá 
(
áá 
)
áá 
;
áá 
app
êê 
.
êê 

UseRouting
êê 
(
êê 
)
êê 
;
êê 
app
ëë 
.
ëë 
UseCors
ëë 
(
ëë 
)
ëë 
;
ëë 
app
íí 
.
íí 
UseAuthentication
íí 
(
íí 
)
íí 
;
íí  
app
îî 
.
îî 
UseUnitOfWork
îî 
(
îî 
)
îî 
;
îî 
app
ïï 
.
ïï 
UseDynamicClaims
ïï 
(
ïï 
)
ïï 
;
ïï 
app
ññ 
.
ññ 
UseAuthorization
ññ 
(
ññ 
)
ññ 
;
ññ 
app
òò 
.
òò 

UseSwagger
òò 
(
òò 
)
òò 
;
òò 
app
ôô 
.
ôô 
UseAbpSwaggerUI
ôô 
(
ôô 
c
ôô 
=>
ôô  
{
öö 	
c
õõ 
.
õõ 
SwaggerEndpoint
õõ 
(
õõ 
$str
õõ 8
,
õõ8 9
$str
õõ: L
)
õõL M
;
õõM N
var
ùù 
configuration
ùù 
=
ùù 
context
ùù  '
.
ùù' (
ServiceProvider
ùù( 7
.
ùù7 8 
GetRequiredService
ùù8 J
<
ùùJ K
IConfiguration
ùùK Y
>
ùùY Z
(
ùùZ [
)
ùù[ \
;
ùù\ ]
c
ûû 
.
ûû 
OAuthClientId
ûû 
(
ûû 
configuration
ûû )
[
ûû) *
$str
ûû* F
]
ûûF G
)
ûûG H
;
ûûH I
c
üü 
.
üü 
OAuthScopes
üü 
(
üü 
$str
üü (
)
üü( )
;
üü) *
}
†† 	
)
††	 

;
††
 
app
¢¢ 
.
¢¢ 
UseAuditing
¢¢ 
(
¢¢ 
)
¢¢ 
;
¢¢ 
app
££ 
.
££ $
UseAbpSerilogEnrichers
££ "
(
££" #
)
££# $
;
££$ %
app
§§ 
.
§§ $
UseConfiguredEndpoints
§§ "
(
§§" #
)
§§# $
;
§§$ %
}
•• 
}¶¶ ∫	
ÅD:\PROJECTS\.NET\ABP Framework\SawaTech assign\aspnet-core\src\SawaTech.PropertyMini.HttpApi.Host\PropertyMiniBrandingProvider.cs
	namespace 	
SawaTech
 
. 
PropertyMini 
;  
[ 

Dependency 
( 
ReplaceServices 
= 
true "
)" #
]# $
public		 
class		 (
PropertyMiniBrandingProvider		 )
:		* +#
DefaultBrandingProvider		, C
{

 
private 
readonly 
IStringLocalizer %
<% & 
PropertyMiniResource& :
>: ;

_localizer< F
;F G
public 
(
PropertyMiniBrandingProvider '
(' (
IStringLocalizer( 8
<8 9 
PropertyMiniResource9 M
>M N
	localizerO X
)X Y
{ 

_localizer 
= 
	localizer 
; 
} 
public 

override 
string 
AppName "
=># %

_localizer& 0
[0 1
$str1 :
]: ;
;; <
} Â
lD:\PROJECTS\.NET\ABP Framework\SawaTech assign\aspnet-core\src\SawaTech.PropertyMini.HttpApi.Host\Program.cs
	namespace		 	
SawaTech		
 
.		 
PropertyMini		 
;		  
public 
class 
Program 
{ 
public 

async 
static 
Task 
< 
int  
>  !
Main" &
(& '
string' -
[- .
]. /
args0 4
)4 5
{ 
Log 
. 
Logger 
= 
new 
LoggerConfiguration ,
(, -
)- .
. 
MinimumLevel 
. 
Debug 
(  
)  !
. 
MinimumLevel 
. 
Override "
(" #
$str# .
,. /
LogEventLevel0 =
.= >
Information> I
)I J
. 
MinimumLevel 
. 
Override "
(" #
$str# B
,B C
LogEventLevelD Q
.Q R
WarningR Y
)Y Z
. 
Enrich 
. 
FromLogContext "
(" #
)# $
. 
WriteTo 
. 
Async 
( 
c 
=> 
c  !
.! "
File" &
(& '
$str' 6
)6 7
)7 8
. 
WriteTo 
. 
Async 
( 
c 
=> 
c  !
.! "
Console" )
() *
)* +
)+ ,
. 
CreateLogger 
( 
) 
; 
try 
{ 	
Log 
. 
Information 
( 
$str J
)J K
;K L
var 
builder 
= 
WebApplication (
.( )
CreateBuilder) 6
(6 7
args7 ;
); <
;< =
builder   
.   
Host   
.   %
AddAppSettingsSecretsJson   2
(  2 3
)  3 4
.!! 

UseAutofac!! 
(!! 
)!! 
."" 

UseSerilog"" 
("" 
)"" 
;"" 
await## 
builder## 
.## 
AddApplicationAsync## -
<##- .)
PropertyMiniHttpApiHostModule##. K
>##K L
(##L M
)##M N
;##N O
var$$ 
app$$ 
=$$ 
builder$$ 
.$$ 
Build$$ #
($$# $
)$$$ %
;$$% &
await%% 
app%% 
.%% &
InitializeApplicationAsync%% 0
(%%0 1
)%%1 2
;%%2 3
await&& 
app&& 
.&& 
RunAsync&& 
(&& 
)&&  
;&&  !
return'' 
$num'' 
;'' 
}(( 	
catch)) 
()) 
	Exception)) 
ex)) 
))) 
{** 	
if++ 
(++ 
ex++ 
is++  
HostAbortedException++ *
)++* +
{,, 
throw-- 
;-- 
}.. 
Log00 
.00 
Fatal00 
(00 
ex00 
,00 
$str00 9
)009 :
;00: ;
return11 
$num11 
;11 
}22 	
finally33 
{44 	
Log55 
.55 
CloseAndFlush55 
(55 
)55 
;55  
}66 	
}77 
}88 ˜
D:\PROJECTS\.NET\ABP Framework\SawaTech assign\aspnet-core\src\SawaTech.PropertyMini.HttpApi.Host\Controllers\HomeController.cs
	namespace 	
SawaTech
 
. 
PropertyMini 
.  
Controllers  +
;+ ,
public 
class 
HomeController 
: 
AbpController +
{ 
public 

ActionResult 
Index 
( 
) 
{		 
return

 
Redirect

 
(

 
$str

 #
)

# $
;

$ %
} 
} 